name: Rust
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # build: [linux, macos, win32, win64]
        build:
          - linux
          - macos
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: win32
            os: windows-latest
            rust: stable-i686-msvc
          - build: win64
            os: windows-latest
            rust: stable-x86_64-msvc
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install Rust
        run: |
          curl -sSL https://sh.rustup.rs | sh -s -- -y --default-toolchain ${{ matrix.rust }}
          echo "##[add-path]$HOME/.cargo/bin"
      - run: |
          rustup update ${{ matrix.rust }}
      - name: Build
        run: cargo build
      - name: Run tests
        run: |
          set -ex
          FEATURES=()
          [[ -n "$GITHUB_TOKEN" ]] && FEATURES=('--github-token' "$GITHUB_TOKEN")
          RUST_COMMIT=$(git ls-remote https://github.com/rust-lang/rust master | awk '{print $1}')
          cargo run -- "${FEATURES[@]}"
          rustc +"$RUST_COMMIT" -vV
          rustc +"$RUST_COMMIT" -vV | grep -q "$RUST_COMMIT"
        shell: bash

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup component add rustfmt
      - run: cargo fmt --all -- --check
